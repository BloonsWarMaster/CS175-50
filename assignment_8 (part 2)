# -*- coding: utf-8 -*-

#Suchit Mudichintala
#CS 175

#String and list Operations in Python

#Q1: Create a program to check if a string is a palindrome.

#Remove spaces and lowercase the string

userString = input("Enter a string: ")
userString = userString.replace(" ", "")
userString = userString.lower()

#Check if the string is a palindrome

if userString == userString[::-1]:
  print("The string is a palindrome.")
else:
  print("The string is not a palindrome.")

#Q2: Create a Python program to count the number of vowels in a string.

#Get a string from the user.

userString = input("Enter a string: ")

#Convert the string to lowercase.

userString = userString.lower()

#Create a variable to hold the count.

count = 0

#Count the vowels and print the result.

for char in userString:
  if char in "aeiou":
    count += 1
print(count)

#Q3: Create a program that find the longest word in a sentence.

#Splits the string into a list of words using split().

sentence = input("Enter a sentence: ")

words = sentence.split()

#Uses the max() function with key = len to find the word with the maximum length.

longest_word = max(words, key=len)

print(longest_word)

#Q4: Create a program that find the maximum and minimum numbers in a list.

numbers = [3, 5, 2, 9, 6]

maximum = max(numbers)
minimum = min(numbers)

print("Maximum:", maximum)
print("Minimum:", minimum)

#Q5: Create a program that removes duplicates from a list.

items = [1, 2, 2, 3, 4, 4, 5]

unique_items = list(set(items))

print("List with duplicates removed:", unique_items)

#Q6: Create a program that finds even and odd numbers in a list.

numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]

even_numbers = [num for num in numbers if num % 2 == 0]
odd_numbers = [num for num in numbers if num % 2 != 0]

print("Even numbers:", even_numbers)
print("Odd numbers:", odd_numbers)

#Q7: Create a program that merges two lists, removes duplicates, and sorts the result.

list1 = [1, 2, 3, 4]
list2 = [3, 4, 5, 6]

merged_list = list1 + list2

unique_list = list(set(merged_list))

sorted_list = sorted(unique_list)

print("Merged and unique list:", sorted_list)

#Q8: Create a program that find the difference between two lists.

list1 = [1, 2, 3, 4]
list2 = [3, 4, 5, 6]

difference = list(set(list1) - set(list2))

print("Difference of list1 - list2:", difference)

#Q9: Create a program that finds all anagram (word or phrase formed by rearranging the letters of another) pairs in a list of words.

#The function goes through each possible pair of words using nested loops in the given list and checks if they are anagrams by comparing their sorted characters using sorted() method. If they are anagrams, it adds them as a tuple to the anagrams list.

def find_all_anagram_pairs(word_list):
    anagram_pairs = []
    for i in range(len(word_list)):
        for j in range(i + 1, len(word_list)):
            if sorted(word_list[i]) == sorted(word_list[j]):
                anagram_pairs.append((word_list[i], word_list[j]))
    return anagram_pairs

word_list = ["listen", "enlist", "hello", "world", "drowl"]
anagram_pairs = find_all_anagram_pairs(word_list)
print(anagram_pairs)

#Q11: Create a program that concatenates a list of strings with a specified separator " - ".

strings = ["apple", "banana", "cherry"]
separator = " - "

result = separator.join(strings)

print(result)

#Q12: Create a program that removes non-alphabetic characters from a string.

input_string = "Hello, World! 123"

# Removing non-alphabetic characters
output_string = "".join(char for char in input_string if char.isalpha())

# Displaying the result
print("Alphabetic characters only:", output_string)
