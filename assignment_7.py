# -*- coding: utf-8 -*-
"""Assignment 7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1MQM6Ndnp3gnU3P6zhzJkT9pnwmAGk1vX
"""

#Suchit Mudichintala
#CS 175

#lists-tuples

#Create a list.

scores = [2.5, 7.3, 6.5, 4.0, 5.2]

#Use for loop to calculate the total

total = 0
for score in scores:
    total += score

#Calculate the average of the elements.

average = total / len(scores)

#Display the average.

print(f"The average elements is {average}.")

#write cities.txt

def main():
    filename = 'cities.txt'

    with open(filename, 'w') as file:
        cities = ['New York', 'Boston', 'Atlanta', 'Dallas']
        for city in cities:
            file.write(city + '\n')

    print(f"City names written to {filename}")

if __name__ == '__main__':
    main()

#read cities.txt and print a list of cities

def main():
    filename = 'cities.txt'

    try:
        with open(filename, 'r') as file:
            cities = [line.strip() for line in file]

        print(cities)

    except FileNotFoundError:
        print(f"The file '{filename}' was not found.")

if __name__ == '__main__':
    main()

import matplotlib.pyplot as plt

#Create a program to plot list data with the matplotlib package

#Create a list with the heights of each bar.

heights = [100, 200, 300, 400, 500]

x_labels = [0, 10, 20, 30, 40]
#Create a variable for the bar width.

bar_width = 10

#Build the bar chart with different colors

plt.bar(x_labels, heights, width=bar_width, color=('r', 'g', 'b', 'c', 'black'))


#Add a title.
plt.title = "Sales by Year"

#Add labels.
plt.xlabel('Year')
plt.ylabel('Sales')

#Call the xticks() function to display custom tick mark labels for years along the X axis, and call the yticks() function to display custom tick mark labels for sales in dollars along the Y axis.

plt.xticks([5, 15, 25, 35, 45], ['2016', '2017', '2018', '2019', '2020'])
plt.yticks([0, 100, 200, 300, 400, 500], ['$0m','$1m', '$2m', '$3m', '$4m', '$5m'])



#Display the bar chart.

plt.show()

#Build a Python program to create lists objects by reading line by line from a CSV file
import csv

def main():
    filename = 'data.csv'
    categories = []
    values = []

    with open(filename, 'r') as file:

        #1. csv.reader(): This reads the CSV file line by line (need to import csv).
        reader = csv.reader(file)

        #2. next(reader): Skips the header row (if your CSV file has one).
        next(reader)

        for row in reader:

            #3.	The first column from the CSV is appended to the categories list.
            categories.append(row[0])

            #4.	The second column is appended to the values list after converting it to an integer.
            values.append(int(row[1]))

    #5.	Run the program, and it will print two lists, one containing the categories and the other containing the values.
    print("Categories List:", categories)
    print("Values List:", values)

if __name__ == '__main__':
    main()

#Create a program to plot list data from CSV file with the matplotlib package

#1.	Create lists objects by reading line by line from a CSV file

#2.	Creates a bar chart with the categories on the x-axis and the values on the y-axis.

#3.	Run the program, and it will read the CSV file, process the data, and create a bar chart.

import csv
import matplotlib.pyplot as plt

def main():
    filename = 'data.csv'
    categories = []
    values = []

    with open(filename, 'r') as file:
        reader = csv.reader(file)
        next(reader)

        for row in reader:
            categories.append(row[0])
            values.append(int(row[1]))

    plt.bar(categories, values, color=('r', 'g', 'b', 'skyblue', 'black'))
    plt.title('Fruit Distribution')
    plt.xlabel('Category')
    plt.ylabel('Value')
    plt.show()

if __name__ == '__main__':
    main()