# -*- coding: utf-8 -*-
"""CH12_Recursion.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Q776rU-FZy0VTi003-5A6Nn_FwTBQf1E
"""

#Write a Python program using recursion to calculate the sum of all numbers from 1 to n.

def sum_numbers(n):
    if n == 1:
        return 1
    else:
        return n + sum_numbers(n - 1)

n = 5
print(f"The sum of numbers from 1 to {n} is: {sum_numbers(n)}")

#Write a Python program to reverse a string using recursion.

def reverse_string(s):
    if len(s) == 0:
        return s
    else:
        return reverse_string(s[1:]) + s[0]

string = "hello"
print(f"The reverse of {string} is: {reverse_string(string)}")

#Write a Python program using recursion to check if a string is a Palindrome.

def is_palindrome(s):
    if len(s) <= 1:
        return True
    else:
        if s[0] == s[-1]:
            return is_palindrome(s[1:-1])
        else:
            return False

string = "racecar"
print(f"Is '{string}' a palindrome? {is_palindrome(string)}")

#Write the base case for a function that calculates the factorial of a number using recursion.

def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)

number = 5
print(f"The factorial of {number} is: {factorial(number)}")

#What will be the output of the following code?

def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)

print(factorial(4))

#B) 24

#What is wrong with the following code for computing Fibonacci numbers?

def fibonacci(n):
    if n == 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fibonacci(n - 1) + n

print(fibonacci(5))

#It should return fibonacci(n-1) + (fibonacci(n-2), (add the two preceding numbers, not the current and previous number)

#1. What is the essential part of a recursive function to prevent infinite recursion?
# B) Base Case

#2. What does a recursive function do when it reaches the base case?
# B) It stops calling itself and begins to return values.

#3. Which of the following is NOT a valid use case for recursion?
# D) Iterating through a loop

#4. In a recursive function, which data structure is primarily used to store the state of each function call?
# C) Stack

#5. What is the base case for a recursive Fibonacci function?
# C) F(0)=0, F(1) = 1